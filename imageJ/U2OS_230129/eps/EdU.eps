%!PS-Adobe-2.0
%%Title: /Users/nakaokahidenori/Documents/Publications/2023_Hara_CST/RAD51/U2OS_230129/EdU.eps
%%Creator: gnuplot 5.4 patchlevel 6
%%CreationDate: Fri May 19 13:56:10 2023
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -120 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/Users/nakaokahidenori/Documents/Publications/2023_Hara_CST/RAD51/U2OS_230129/EdU.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 6)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 19 13:56:10 2023)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 360 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
2160 1260 M
-63 0 V
63 325 R
-31 0 V
31 190 R
-31 0 V
31 135 R
-31 0 V
31 105 R
-31 0 V
31 85 R
-31 0 V
31 72 R
-31 0 V
31 63 R
-31 0 V
31 55 R
-31 0 V
31 50 R
-63 0 V
63 325 R
-31 0 V
31 190 R
-31 0 V
31 135 R
-31 0 V
31 104 R
-31 0 V
31 86 R
-31 0 V
31 72 R
-31 0 V
31 63 R
-31 0 V
31 55 R
-31 0 V
31 49 R
-63 0 V
63 325 R
-31 0 V
31 190 R
-31 0 V
31 135 R
-31 0 V
31 105 R
-31 0 V
31 85 R
-31 0 V
31 73 R
-31 0 V
31 62 R
-31 0 V
31 56 R
-31 0 V
31 49 R
-63 0 V
63 -3239 R
0 -63 V
768 63 R
0 -63 V
768 63 R
0 -63 V
768 63 R
0 -63 V
767 63 R
0 -63 V
768 63 R
0 -63 V
768 63 R
0 -63 V
stroke
LTB
LCb setrgbcolor
2160 4499 M
0 -3239 V
4607 0 V
0 3239 R
-4607 0 R
1.000 UP
stroke
LTb
LCb setrgbcolor
LCb setrgbcolor
351 2879 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 360.0 0.0 true true 0 (EdU fluorescence / a.u.)]
] -120.0 MCshow
grestore
/Helvetica findfont 360 scalefont setfont
/vshift -120 def
LTb
LCb setrgbcolor
4463 297 M
[ [(Helvetica) 360.0 0.0 true true 0 (ROI)]
] -120.0 MCshow
/Helvetica findfont 360 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.57 0.60 0.62 C
2175 3836 Circle
2191 3791 Circle
2206 1893 Circle
2221 1911 Circle
2237 2858 Circle
2252 3620 Circle
2267 3288 Circle
2283 3654 Circle
2298 1982 Circle
2314 2087 Circle
2329 1905 Circle
2344 3754 Circle
2360 3587 Circle
2375 3684 Circle
2390 3839 Circle
2406 3699 Circle
2421 3703 Circle
2436 3630 Circle
2452 3680 Circle
2467 3843 Circle
2482 3674 Circle
2498 3753 Circle
2513 3855 Circle
2529 3609 Circle
2544 3432 Circle
2559 3540 Circle
2575 3752 Circle
2590 2221 Circle
2605 3727 Circle
2621 3851 Circle
2636 3405 Circle
2651 2941 Circle
2667 2217 Circle
2682 3110 Circle
2697 3630 Circle
2713 1860 Circle
2728 2209 Circle
2744 1963 Circle
2759 2128 Circle
2774 1942 Circle
2790 2902 Circle
2805 2085 Circle
2820 1986 Circle
2836 2522 Circle
2851 2120 Circle
2866 3395 Circle
2882 3695 Circle
2897 2348 Circle
2912 3396 Circle
2928 2288 Circle
2943 3433 Circle
2959 3725 Circle
2974 3769 Circle
2989 2220 Circle
3005 3036 Circle
3020 1977 Circle
3035 3259 Circle
3051 3676 Circle
3066 3743 Circle
3081 1771 Circle
3097 1808 Circle
3112 1697 Circle
3127 3062 Circle
3143 1747 Circle
3158 3831 Circle
3174 2707 Circle
3189 1960 Circle
3204 3965 Circle
3220 4054 Circle
3235 3866 Circle
3250 1829 Circle
3266 3880 Circle
3281 1775 Circle
3296 3916 Circle
3312 3750 Circle
3327 3721 Circle
3342 3687 Circle
3358 1661 Circle
3373 2124 Circle
3389 3700 Circle
3404 3503 Circle
3419 1718 Circle
3435 3533 Circle
3450 3834 Circle
3465 3463 Circle
3481 3687 Circle
3496 1620 Circle
3511 1669 Circle
3527 2474 Circle
3542 1654 Circle
3557 4022 Circle
3573 1835 Circle
3588 3989 Circle
3604 3772 Circle
3619 1653 Circle
3634 3659 Circle
3650 1711 Circle
3665 3819 Circle
3680 3806 Circle
3696 1827 Circle
3711 3954 Circle
3726 3882 Circle
3742 4008 Circle
3757 2723 Circle
3772 3900 Circle
3788 3848 Circle
3803 4035 Circle
3819 4063 Circle
3834 3647 Circle
3849 3973 Circle
3865 4016 Circle
3880 4069 Circle
3895 1656 Circle
3911 3786 Circle
3926 3395 Circle
3941 1770 Circle
3957 3935 Circle
3972 4030 Circle
3987 3726 Circle
4003 3752 Circle
4018 3910 Circle
4034 3665 Circle
4049 3826 Circle
4064 3910 Circle
4080 3959 Circle
4095 3881 Circle
4110 2351 Circle
4126 2405 Circle
4141 3853 Circle
4156 2424 Circle
4172 3661 Circle
4187 3708 Circle
4202 3761 Circle
4218 3748 Circle
4233 3835 Circle
4249 2431 Circle
4264 3259 Circle
4279 2287 Circle
4295 3013 Circle
4310 3253 Circle
4325 2047 Circle
4341 2190 Circle
4356 2974 Circle
4371 1977 Circle
4387 2026 Circle
4402 3592 Circle
4417 2073 Circle
4433 1949 Circle
4448 3606 Circle
4464 1999 Circle
4479 3764 Circle
4494 2105 Circle
4510 2201 Circle
4525 3869 Circle
4540 2368 Circle
4556 2072 Circle
4571 3496 Circle
4586 2299 Circle
4602 2520 Circle
4617 3568 Circle
4632 3884 Circle
4648 3672 Circle
4663 3688 Circle
4678 3485 Circle
4694 1949 Circle
4709 3665 Circle
4725 2164 Circle
4740 3736 Circle
4755 3638 Circle
4771 3754 Circle
4786 2292 Circle
4801 2398 Circle
4817 3408 Circle
4832 2259 Circle
4847 2297 Circle
4863 3474 Circle
4878 3703 Circle
4893 2199 Circle
4909 3905 Circle
4924 3778 Circle
4940 2392 Circle
4955 2374 Circle
4970 3785 Circle
4986 3943 Circle
5001 1970 Circle
5016 3626 Circle
5032 3526 Circle
5047 1928 Circle
5062 3842 Circle
5078 3476 Circle
5093 3632 Circle
5108 3767 Circle
5124 3951 Circle
5139 3916 Circle
5155 2452 Circle
5170 3442 Circle
5185 3104 Circle
5201 4060 Circle
5216 3601 Circle
5231 3326 Circle
5247 1796 Circle
5262 3801 Circle
5277 1852 Circle
5293 3773 Circle
5308 1706 Circle
5323 1732 Circle
5339 3782 Circle
5354 1709 Circle
5370 1596 Circle
5385 1579 Circle
5400 1592 Circle
5416 1572 Circle
5431 1577 Circle
5446 1592 Circle
5462 3423 Circle
5477 1618 Circle
5492 3802 Circle
5508 3686 Circle
5523 1721 Circle
5538 3573 Circle
5554 3582 Circle
5569 3660 Circle
5585 3644 Circle
5600 1726 Circle
5615 3822 Circle
5631 2903 Circle
5646 3841 Circle
5661 1814 Circle
5677 3919 Circle
5692 3791 Circle
5707 3898 Circle
5723 3469 Circle
5738 3619 Circle
5753 3407 Circle
5769 3802 Circle
5784 3450 Circle
5800 3789 Circle
5815 3736 Circle
5830 3785 Circle
5846 1757 Circle
5861 1775 Circle
5876 3783 Circle
5892 3870 Circle
5907 1822 Circle
5922 1848 Circle
5938 3682 Circle
5953 1810 Circle
5968 3764 Circle
5984 3704 Circle
5999 3841 Circle
6015 3461 Circle
6030 1815 Circle
6045 3614 Circle
6061 1774 Circle
6076 2120 Circle
6091 1818 Circle
6107 1981 Circle
6122 3986 Circle
6137 2459 Circle
6153 3855 Circle
6168 1809 Circle
6183 4064 Circle
% End plot #1
1.000 UL
LTb
LCb setrgbcolor
2160 1260 M
-63 0 V
stroke
1881 1260 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MRshow
/Helvetica findfont 360 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2160 1585 M
-31 0 V
31 190 R
-31 0 V
31 135 R
-31 0 V
31 105 R
-31 0 V
31 85 R
-31 0 V
31 72 R
-31 0 V
31 63 R
-31 0 V
31 55 R
-31 0 V
31 50 R
-63 0 V
stroke
1881 2340 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1000)]
] -80.0 MRshow
/Helvetica findfont 360 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2160 2665 M
-31 0 V
31 190 R
-31 0 V
31 135 R
-31 0 V
31 104 R
-31 0 V
31 86 R
-31 0 V
31 72 R
-31 0 V
31 63 R
-31 0 V
31 55 R
-31 0 V
31 49 R
-63 0 V
stroke
1881 3419 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 10000)]
] -80.0 MRshow
/Helvetica findfont 360 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2160 3744 M
-31 0 V
31 190 R
-31 0 V
31 135 R
-31 0 V
31 105 R
-31 0 V
31 85 R
-31 0 V
31 73 R
-31 0 V
31 62 R
-31 0 V
31 56 R
-31 0 V
31 49 R
-63 0 V
stroke
1881 4499 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100000)]
] -80.0 MRshow
/Helvetica findfont 360 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2160 1260 M
0 -63 V
stroke
2160 837 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
/Helvetica findfont 360 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2928 1260 M
0 -63 V
stroke
2928 837 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 50)]
] -80.0 MCshow
/Helvetica findfont 360 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3696 1260 M
0 -63 V
stroke
3696 837 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MCshow
/Helvetica findfont 360 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4464 1260 M
0 -63 V
stroke
4464 837 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 150)]
] -80.0 MCshow
/Helvetica findfont 360 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5231 1260 M
0 -63 V
stroke
5231 837 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 200)]
] -80.0 MCshow
/Helvetica findfont 360 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5999 1260 M
0 -63 V
stroke
5999 837 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 250)]
] -80.0 MCshow
/Helvetica findfont 360 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6767 1260 M
0 -63 V
stroke
6767 837 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 300)]
] -80.0 MCshow
/Helvetica findfont 360 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
2160 4499 M
0 -3239 V
4607 0 V
0 3239 R
-4607 0 R
1.000 UP
stroke
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
